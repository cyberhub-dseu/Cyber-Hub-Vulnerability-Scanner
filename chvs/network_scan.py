import nmap

def scan_vulnerabilities(target):
    nm = nmap.PortScanner()
    results = []

    try:
        # Scan for open ports
        nm.scan(target, arguments='-p-')
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                ports = nm[host][proto].keys()
                for port in ports:
                    state = nm[host][proto][port]['state']
                    results.append({
                        'host': host,
                        'port': port,
                        'state': state,
                    })

        # Scan for service versions and outdated software
        nm.scan(target, arguments='-sV')
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                ports = nm[host][proto].keys()
                for port in ports:
                    service_info = nm[host][proto][port]
                    results.append({
                        'host': host,
                        'port': port,
                        'service': service_info.get('name', 'N/A'),
                        'version': service_info.get('version', 'N/A'),
                    })

        # Scan for weak encryption
        nm.scan(target, arguments='--script ssl-enum-ciphers')
        for host in nm.all_hosts():
            if 'hostscript' in nm[host]:
                for script in nm[host]['hostscript']:
                    results.append({
                        'host': host,
                        'script': script,
                        'output': nm[host]['hostscript'][script]
                    })

        # Run vulnerability scanning scripts
        nm.scan(target, arguments='--script vuln')
        for host in nm.all_hosts():
            if 'hostscript' in nm[host]:
                for script in nm[host]['hostscript']:
                    results.append({
                        'host': host,
                        'script': script,
                        'output': nm[host]['hostscript'][script]
                    })

    except Exception as e:
        print(f"An error occurred: {e}")

    return results

def main():
    import sys
    if len(sys.argv) != 2:
        print("Usage: python3 network_scan.py <target>")
        sys.exit(1)
    
    target = sys.argv[1]
    results = scan_vulnerabilities(target)
    
    # Print results
    for result in results:
        print(result)

if __name__ == "__main__":
    main()
